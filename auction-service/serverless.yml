service: auction-service

plugins:
  - serverless-bundle
  - serverless-plugin-log-retention

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  lambdaHashingVersion: 20201221
  environment:
    AUCTIONS_TABLE_NAME: ${self:custom.AuctionsTable.name}
    MAIL_QUEUE_URL: ${self:custom.mailQueue.url}
  iamRoleStatements:
    - ${file(iam/AuctionsTableIAM.yml):AuctionsTableIAM}
    - ${file(iam/MailQueueIAM.yml):MailQueueIAM}

resources:
  Resources:
    AuctionsTable: ${file(resources/AuctionsTable.yml):AuctionsTable}

functions:
  createAuction:
    description: createAuction Function
    handler: src/handlers/createAuction.handler
    events:
      - http:
          method: POST
          path: /auction
          authorizer: ${self:custom.authorizer}

  getAuctions:
    description: getAuctions Function
    handler: src/handlers/getAuctions.handler
    events:
      - http:
          method: GET
          path: /auctions
          authorizer: ${self:custom.authorizer}

  getAuction:
    description: getAuction Function
    handler: src/handlers/getAuction.handler
    events:
      - http:
          method: GET
          path: /auction/{id}
          authorizer: ${self:custom.authorizer}

  placeBid:
    description: placeBid Function
    handler: src/handlers/placeBid.handler
    events:
      - http:
          method: PATCH
          path: auction/{id}/bid
          authorizer: ${self:custom.authorizer}

  processAuctions:
    description: processAuctions Function
    handler: src/handlers/processAuctions.handler
    # events:
    #   - schedule: rate(1 minute)

custom:
  logRetentionInDays: 30
  AuctionsTable:
    name: !Ref AuctionsTable
    arn: !GetAtt AuctionsTable.Arn
  mailQueue:
    arn: ${cf:notification-service-${self:provider.stage}.MailQueueArn}
    url: ${cf:notification-service-${self:provider.stage}.MailQueueUrl}
  authorizer: arn:aws:lambda:us-east-1:362738749673:function:auth-service-dev-auth
